/* This file tells Jenkins how to test this repo. Everything runs in docker 
 * containers, so in theory any Jenkins server should be able to parse this 
 * file. However in the katxgpu case, the Jenkins server needs access to a GPU. 
 * This means that the docker engine being used needs to have been configured to
 * use the Nvidia Container Runtime and the node the container run on needs a 
 * Nvidia GPU with the Nvidia Driver installed.
 * 
 * TODO:
 *    1. Create a Dockerfile taking over the functionality of the "Configure
 *     Environment" stage and commit it somewhere relevant
 */
pipeline {
  agent {
    docker {
      /* This custom image is built on the nvidia/cuda:10.1-devel-ubuntu18.04 
       * image. It contains the CUDA developement environment which is required
       * to compile the kernels as well as the python3 which is required to run
       * katxgpu
       */
      image 'ubuntu18.04_cuda10.1_python3'

      /* --gpus all: This argument passes the Nvidia driver and devices from the
       * host to the container. It requires the NVIDIA Container Runtime to be 
       * installed on the host.
       * 
       * --network=host: I was having trouble getting the docker container to 
       * connect to the internet. This occured when I was using Jenkins in
       * conjunction with docker in docker (dind). This flag resolved that
       * issue. There are probably more elegant solutions, but I have not had a 
       * chance to look into them.
       */
      args '--gpus all --network=host'
    }

  }

  stages {

    /* This stage should ideally be part of the initial Docker image, as it
     * takes time and downloads multple Gigabytes from the internet. A new 
     * Dockerfile needs to be created that will extend the 
     * nvidia/cuda:10.1-devel-ubuntu18.04 image to include this install.
     *
     * EDIT: I have put this stage into a Dockerfile, which has not yet been
     * commited anywhere. I will do this eventually. The code has been left here
     * a reminder of what to put in the docker file. The new image is called:
     * ubuntu18.04_cuda10.1_python3
     */
    /*stage('Configure Environment') {
      steps {
        sh 'apt-get update && apt-get install -y python3.6 python3-pip'
        sh 'su jenkins'
      }
    }*/

    /* This stage is kept seperate from the "Install katxgpu package" stage
     * below as the stage one will fail when something external goes wrong while
     * the next stage will fail if we have done something wrong in the katxgpu
     * package. It seems best to split them to make it easier to pinpoint the 
     * source of the problem.
     */
    stage('Install required python packages') {
      steps {
        sh 'pip3 install --user -r requirements.txt'
        sh 'pip3 install --user -r requirements-dev.txt'
      }
    }

    stage('Install katxgpu package') {
      steps {
        sh 'pip3 install -e .'
      }
    }

    stage('Run pytest') {
      steps {
        sh 'pytest -v --junitxml=reports/result.xml'
      }
    }
  }

  post {
    always {
      /* Deleting the working directory is especially important when running the
       * container as root as the Jenkins pipeline is unable to clear the 
       * necessary files when running the next test.
       */
      deleteDir() 
    }
  }
}